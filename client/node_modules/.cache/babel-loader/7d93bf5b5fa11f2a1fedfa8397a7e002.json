{"ast":null,"code":"import _slicedToArray from \"/Users/josephstaugaard/Dropbox/CodingClass/Repos/realestate-confi/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/josephstaugaard/Dropbox/CodingClass/Repos/realestate-confi/client/src/context/article/ArticleState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ArticleContext from './articleContext';\nimport articleReducer from './articleReducer';\nimport { GET_ARTICLES, ADD_ARTICLE, DELETE_ARTICLE, SET_CURRENT, CLEAR_CURRENT, UPDATE_ARTICLE, FILTER_ARTICLES, CLEAR_ARTICLES, CLEAR_FILTER, ARTICLE_ERROR } from '../types';\n\nconst ArticleState = props => {\n  const initialState = {\n    articles: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(articleReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Get Articles\n\n\n  const getArticles = async () => {\n    try {\n      const res = await axios.get('/api/articles');\n      dispatch({\n        type: GET_ARTICLES,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ARTICLE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Add Article\n\n\n  const addArticle = async article => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/articles', article, config);\n      dispatch({\n        type: ADD_ARTICLE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ARTICLE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Article\n\n\n  const deleteArticle = async id => {\n    try {\n      await axios.delete(\"/api/articles/\".concat(id));\n      dispatch({\n        type: DELETE_ARTICLE,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: ARTICLE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Update Article\n\n\n  const updateArticle = async article => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(\"/api/articles/\".concat(article._id), article, config);\n      dispatch({\n        type: UPDATE_ARTICLE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ARTICLE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Clear Articles\n\n\n  const clearArticles = () => {\n    dispatch({\n      type: CLEAR_ARTICLES\n    });\n  }; // Set Current Article\n\n\n  const setCurrent = article => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: article\n    });\n  }; // Clear Current Article\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Filter Articles\n\n\n  const filterArticles = text => {\n    dispatch({\n      type: FILTER_ARTICLES,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ArticleContext.Provider, {\n    value: {\n      articles: state.articles,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addArticle,\n      deleteArticle,\n      setCurrent,\n      clearCurrent,\n      updateArticle,\n      filterArticles,\n      clearFilter,\n      getArticles,\n      clearArticles\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ArticleState;","map":{"version":3,"sources":["/Users/josephstaugaard/Dropbox/CodingClass/Repos/realestate-confi/client/src/context/article/ArticleState.js"],"names":["React","useReducer","axios","ArticleContext","articleReducer","GET_ARTICLES","ADD_ARTICLE","DELETE_ARTICLE","SET_CURRENT","CLEAR_CURRENT","UPDATE_ARTICLE","FILTER_ARTICLES","CLEAR_ARTICLES","CLEAR_FILTER","ARTICLE_ERROR","ArticleState","props","initialState","articles","current","filtered","error","state","dispatch","getArticles","res","get","type","payload","data","err","response","msg","addArticle","article","config","headers","post","deleteArticle","id","delete","updateArticle","put","_id","clearArticles","setCurrent","clearCurrent","filterArticles","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ArticleContext from './articleContext';\nimport articleReducer from './articleReducer';\nimport {\n  GET_ARTICLES,\n  ADD_ARTICLE,\n  DELETE_ARTICLE,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_ARTICLE,\n  FILTER_ARTICLES,\n  CLEAR_ARTICLES,\n  CLEAR_FILTER,\n  ARTICLE_ERROR\n} from '../types';\n\nconst ArticleState = props => {\n  const initialState = {\n    articles: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(articleReducer, initialState);\n\n  // Get Articles\n  const getArticles = async () => {\n    try {\n      const res = await axios.get('/api/articles');\n\n      dispatch({\n        type: GET_ARTICLES,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ARTICLE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Add Article\n  const addArticle = async article => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/articles', article, config);\n\n      dispatch({\n        type: ADD_ARTICLE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ARTICLE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Delete Article\n  const deleteArticle = async id => {\n    try {\n      await axios.delete(`/api/articles/${id}`);\n\n      dispatch({\n        type: DELETE_ARTICLE,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: ARTICLE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Update Article\n  const updateArticle = async article => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(\n        `/api/articles/${article._id}`,\n        article,\n        config\n      );\n\n      dispatch({\n        type: UPDATE_ARTICLE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ARTICLE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Clear Articles\n  const clearArticles = () => {\n    dispatch({ type: CLEAR_ARTICLES });\n  };\n\n  // Set Current Article\n  const setCurrent = article => {\n    dispatch({ type: SET_CURRENT, payload: article });\n  };\n\n  // Clear Current Article\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Filter Articles\n  const filterArticles = text => {\n    dispatch({ type: FILTER_ARTICLES, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ArticleContext.Provider\n      value={{\n        articles: state.articles,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        addArticle,\n        deleteArticle,\n        setCurrent,\n        clearCurrent,\n        updateArticle,\n        filterArticles,\n        clearFilter,\n        getArticles,\n        clearArticles\n      }}\n    >\n      {props.children}\n    </ArticleContext.Provider>\n  );\n};\n\nexport default ArticleState;\n"]},"metadata":{},"sourceType":"module"}