{"ast":null,"code":"import _objectSpread from \"/Users/josephstaugaard/Dropbox/CodingClass/Repos/realestate-confi/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_ARTICLES, ADD_ARTICLE, DELETE_ARTICLE, SET_CURRENT, CLEAR_CURRENT, UPDATE_ARTICLE, FILTER_ARTICLES, CLEAR_FILTER, ARTICLE_ERROR, CLEAR_ARTICLES } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_ARTICLES:\n      return _objectSpread({}, state, {\n        articles: action.payload,\n        loading: false\n      });\n\n    case ADD_ARTICLE:\n      return _objectSpread({}, state, {\n        articles: [action.payload, ...state.articles],\n        loading: false\n      });\n\n    case UPDATE_ARTICLE:\n      return _objectSpread({}, state, {\n        articles: state.articles.map(article => article._id === action.payload._id ? action.payload : article),\n        loading: false\n      });\n\n    case DELETE_ARTICLE:\n      return _objectSpread({}, state, {\n        articles: state.articles.filter(article => article._id !== action.payload),\n        loading: false\n      });\n\n    case CLEAR_ARTICLES:\n      return _objectSpread({}, state, {\n        articles: null,\n        filtered: null,\n        error: null,\n        current: null\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        article: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case FILTER_ARTICLES:\n      return _objectSpread({}, state, {\n        filtered: state.articles.filter(article => {\n          const regex = new RegExp(\"\".concat(action.payload), 'gi');\n          return article.heading.match(regex) || article.source.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filtered: null\n      });\n\n    case ARTICLE_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/josephstaugaard/Dropbox/CodingClass/Repos/realestate-confi/client/src/context/article/articleReducer.js"],"names":["GET_ARTICLES","ADD_ARTICLE","DELETE_ARTICLE","SET_CURRENT","CLEAR_CURRENT","UPDATE_ARTICLE","FILTER_ARTICLES","CLEAR_FILTER","ARTICLE_ERROR","CLEAR_ARTICLES","state","action","type","articles","payload","loading","map","article","_id","filter","filtered","error","current","regex","RegExp","heading","match","source"],"mappings":";AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,YARF,EASEC,aATF,EAUEC,cAVF,QAWO,UAXP;AAaA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,YAAL;AACE,+BACKU,KADL;AAEEG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFnB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKd,WAAL;AACE,+BACKS,KADL;AAEEG,QAAAA,QAAQ,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,QAA1B,CAFZ;AAGEE,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKV,cAAL;AACE,+BACKK,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmBC,OAAO,IAClCA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,GAAqCP,MAAM,CAACG,OAA5C,GAAsDG,OAD9C,CAFZ;AAKEF,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKb,cAAL;AACE,+BACKQ,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CACRF,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACG,OAD1B,CAFZ;AAKEC,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKN,cAAL;AACE,+BACKC,KADL;AAEEG,QAAAA,QAAQ,EAAE,IAFZ;AAGEO,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,KAAK,EAAE,IAJT;AAKEC,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKnB,WAAL;AACE,+BACKO,KADL;AAEEO,QAAAA,OAAO,EAAEN,MAAM,CAACG;AAFlB;;AAIF,SAAKV,aAAL;AACE,+BACKM,KADL;AAEEY,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKhB,eAAL;AACE,+BACKI,KADL;AAEEU,QAAAA,QAAQ,EAAEV,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsBF,OAAO,IAAI;AACzC,gBAAMM,KAAK,GAAG,IAAIC,MAAJ,WAAcb,MAAM,CAACG,OAArB,GAAgC,IAAhC,CAAd;AACA,iBAAOG,OAAO,CAACQ,OAAR,CAAgBC,KAAhB,CAAsBH,KAAtB,KAAgCN,OAAO,CAACU,MAAR,CAAeD,KAAf,CAAqBH,KAArB,CAAvC;AACD,SAHS;AAFZ;;AAOF,SAAKhB,YAAL;AACE,+BACKG,KADL;AAEEU,QAAAA,QAAQ,EAAE;AAFZ;;AAIF,SAAKZ,aAAL;AACE,+BACKE,KADL;AAEEW,QAAAA,KAAK,EAAEV,MAAM,CAACG;AAFhB;;AAIF;AACE,aAAOJ,KAAP;AAlEJ;AAoED,CArED","sourcesContent":["import {\n  GET_ARTICLES,\n  ADD_ARTICLE,\n  DELETE_ARTICLE,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_ARTICLE,\n  FILTER_ARTICLES,\n  CLEAR_FILTER,\n  ARTICLE_ERROR,\n  CLEAR_ARTICLES\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_ARTICLES:\n      return {\n        ...state,\n        articles: action.payload,\n        loading: false\n      };\n    case ADD_ARTICLE:\n      return {\n        ...state,\n        articles: [action.payload, ...state.articles],\n        loading: false\n      };\n    case UPDATE_ARTICLE:\n      return {\n        ...state,\n        articles: state.articles.map(article =>\n          article._id === action.payload._id ? action.payload : article\n        ),\n        loading: false\n      };\n    case DELETE_ARTICLE:\n      return {\n        ...state,\n        articles: state.articles.filter(\n          article => article._id !== action.payload\n        ),\n        loading: false\n      };\n    case CLEAR_ARTICLES:\n      return {\n        ...state,\n        articles: null,\n        filtered: null,\n        error: null,\n        current: null\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        article: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n    case FILTER_ARTICLES:\n      return {\n        ...state,\n        filtered: state.articles.filter(article => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return article.heading.match(regex) || article.source.match(regex);\n        })\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    case ARTICLE_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}